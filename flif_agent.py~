import snntorch as snn
from snntorch import spikeplot as splt
from snntorch import spikegen


import torch
import torch.nn as nn


class FSNN(nn.Module):

        def __init__(self, num_input, num_hidden, num_output, num_steps, device):

                super().__init__()

                self.forward_hidden = nn.Linear(num_input, num_hidden)
                self.hidden_layer = flif_neuron(num_hidden, device, num_steps)

                self.forward_output = nn.Linear(num_hidden, num_output)
                self.output_layer = flif_neuron(num_output, device, num_steps)

                self.num_steps = num_steps
                self.device = device

        def forward(self, data):

                # TODO: fill



class flif_neuron(nn.Module):

        
